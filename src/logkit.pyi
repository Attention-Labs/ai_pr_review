from typing import Any, Callable, Coroutine

from structlog.typing import FilteringBoundLogger

log: FilteringBoundLogger

def new_context(**kv: object) -> str: ...

class capture:
    def __init__(self, **kv: object) -> None: ...
    def __call__(self, fn: Callable[..., object]) -> Callable[..., object]: ...
    def __enter__(self) -> 'capture': ...
    def __exit__(
        self, exc_type: type | None, exc: BaseException | None, tb: object
    ) -> bool: ...

def ctx_task(coro: Coroutine[Any, Any, Any]) -> None: ...
